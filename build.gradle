apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'nexus-workflow'


group = 'com.ionoscloud'
version = '5.0.4-SNAPSHOT'

buildscript {
    repositories {
        maven { url "https://repo1.maven.org/maven2" }
        jcenter()
    }
    dependencies {
        classpath 'com.adaptc.gradle:nexus-workflow:0.6'
    }
}

repositories {
    jcenter()
}

sourceSets {
    main.java.srcDirs = ['src/main/java']
}

apply plugin: 'java'
apply plugin: 'maven'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

install {
    repositories.mavenInstaller {
        pom.artifactId = 'ionos-cloud-sdk'
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    repositories {
        maven {
            name = "MavenCentral"
            def baseUrl = "https://oss.sonatype.org"
            def snapshotsRepoUrl = "$baseUrl/content/repositories/snapshots"
            def releasesRepoUrl = "$baseUrl/service/local/staging/deploy/maven2"
            url = uri(version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl)

            credentials {
                username = project.getProperties().get("mvn.credentials.username")
                password = project.getProperties().get("mvn.credentials.password")
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            artifactId = 'ionos-cloud-sdk'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = "Ionos Cloud Sdk"
                description = "The API allows you to perform a variety of management tasks such as spinning up additional servers, adding volumes, adjusting networking, and so forth. It is designed to allow users to leverage the same power and flexibility found within the DCD visual tool. Both tools are consistent with their concepts and lend well to making the experience smooth and intuitive."
                url = "https://github.com/ionos-cloud/sdk-java"
                licenses {
                    license {
                        name = "Unlicense"
                        url = "http://unlicense.org"
                    }
                }
                developers {
                    developer {
                        id = "ionoscloud"
                        name = "Ionos"
                        email = "sdk@cloud.ionos.com"
                    }
                }
                scm {
                    connection = "scm:git:git@github.com:ionos-cloud/sdk-java.git"
                    developerConnection = "scm:git:git@github.com:ionos-cloud/sdk-java.git"
                    url = "https://github.com/ionos-cloud"
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

dependencies {
    compile 'io.swagger:swagger-annotations:1.5.24'
    compile "com.google.code.findbugs:jsr305:3.0.2"
    compile 'com.squareup.okhttp3:okhttp:3.14.7'
    compile 'com.squareup.okhttp3:logging-interceptor:3.14.7'
    compile 'com.google.code.gson:gson:2.8.6'
    compile 'io.gsonfire:gson-fire:1.8.4'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    compile 'org.threeten:threetenbp:1.4.3'
    compile 'javax.annotation:javax.annotation-api:1.3.2'
    testCompile 'junit:junit:4.13.1'
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.tags = [ "http.response.details:a:Http Response Details" ]
}
